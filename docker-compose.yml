
services:

  api_gateway:
    build:
      context: ./api-gateway
    ports:
      - "2000:2000"
    depends_on:
      - microservicio_my-elasticsearch-productos
      - microservicio_compras
      - microservicio_usuarios
    volumes:
      # Ruta relativa desde el directorio donde ejecutas el docker-compose
      - ./api-gateway/key.pem:/app/key.pem
      - ./api-gateway/cert.pem:/app/cert.pem

  microservicio_my-elasticsearch-productos:
    build:
      context: ./microservicios/my-elasticsearch-productos
    ports:
      - "4000:4000"
    environment:
      - MONGO_URI=mongodb://mongo_db:27017/my-elasticsearch-productos
    depends_on:
      - mongo_db
      - elasticsearch
    entrypoint: ["sh", "-c", "sleep 30 && npm start"]  
  microservicio_compras:
    build:
      context: ./microservicios/compras
    ports:
      - "1000:1000"
    environment:
      - MONGO_URI=mongodb://mongo_db:27017/compras
    depends_on:
      - mongo_db

  microservicio_usuarios:
    build:
      context: ./microservicios/usuarios
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo_db:27017/usuarios
    depends_on:
      - mongo_db

  mongo_db:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 5


  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  mongo_data:
  esdata:
    driver: local
